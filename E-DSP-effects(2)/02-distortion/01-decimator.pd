#N canvas 377 266 973 464 10;
#X obj 245 344 waveform-plotter;
#X floatatom 344 164 10 0 0 1 Hz - -, f 10;
#X obj 99 326 output~;
#X msg 99 63 open ../../audio/voice.wav \, start;
#X msg 109 82 stop;
#X obj 99 193 samphold~;
#X obj 344 265 phasor~;
#X obj 344 184 pack f 40;
#X obj 344 205 line~;
#X obj 344 47 loadbang;
#X obj 99 114 readsf~;
#X text 524 56 Sample rate decimation re-samples an input signal at
a rate less than the original sampling rate \, but without the usual
low-pass filtering protections that prevent aliasing. Here \, we're
using [samphold~] to only update the current sample value of the input
signal when a [phasor~] resets. Effectively \, the frequency of the
[phasor~] becomes the new \, lower \, sampling rate.;
#X msg 344 68 44099;
#X text 524 166 Try lowering the sampling rate into the 5000 range
\, and hear the horrible/wonderful aliasing that occurs. You'll notice
that it also acts as a kind of low-pass filter \, since no frequencies
can be accurately reproduced above the new Nyquist. This can sound
nice with an LFO on the [phasor~] frequency if you sweep across a good
range.;
#X connect 1 0 7 0;
#X connect 3 0 10 0;
#X connect 4 0 10 0;
#X connect 5 0 2 0;
#X connect 5 0 2 1;
#X connect 5 0 0 0;
#X connect 6 0 5 1;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 9 0 12 0;
#X connect 10 0 5 0;
#X connect 10 1 3 0;
#X connect 12 0 1 0;
