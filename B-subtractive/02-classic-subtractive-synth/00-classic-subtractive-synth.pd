#N canvas 631 244 713 622 10;
#N canvas 158 23 512 709 16x 0;
#X obj 64 347 *~ 0.064;
#X obj 64 370 rpole~ 0.93538;
#X obj 64 393 *~ 0.00431;
#X obj 64 416 cpole~ 0.96559 0.05592;
#X obj 64 442 cpole~ 0.96559 -0.05592;
#X obj 64 465 *~ 0.125;
#X obj 64 488 rzero~ -1;
#X obj 64 511 rzero~ -1;
#X obj 64 534 rzero~ -1;
#X obj 63 98 phasor~;
#X obj 64 648 outlet~;
#X obj 86 152 wrap~;
#X obj 86 128 -~;
#X obj 86 176 *~;
#X obj 63 205 +~;
#X obj 272 157 phasor~;
#X obj 295 211 wrap~;
#X obj 295 187 -~;
#X obj 295 235 *~;
#X obj 272 267 +~;
#X obj 64 272 +~;
#X obj 250 35 r osc-params;
#X obj 272 101 *~;
#X obj 272 129 +~;
#X obj 62 30 inlet~;
#X obj 156 194 block~ 64 1 16;
#X obj 250 58 unpack f f f f f f;
#X obj 64 585 -~ 1;
#X text 102 583 << offset the signal so that it's between -1 and 1
rather than 0 and 2;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 1 4 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 8 0 27 0;
#X connect 9 0 12 0;
#X connect 9 0 14 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 14 1;
#X connect 14 0 20 0;
#X connect 15 0 17 0;
#X connect 15 0 19 0;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 18 0 19 1;
#X connect 19 0 20 1;
#X connect 20 0 0 0;
#X connect 21 0 26 0;
#X connect 22 0 23 0;
#X connect 23 0 15 0;
#X connect 24 0 9 0;
#X connect 24 0 22 0;
#X connect 26 0 12 1;
#X connect 26 1 13 1;
#X connect 26 2 17 1;
#X connect 26 3 18 1;
#X connect 26 4 22 1;
#X connect 26 5 23 1;
#X connect 27 0 10 0;
#X restore 35 330 pd 16x;
#X obj 108 411 *~;
#X obj 35 388 *~;
#X obj 35 362 vcf~ 3;
#X obj 35 164 t b f;
#X msg 151 203 1;
#X msg 191 203 0;
#X obj 35 134 stripnote;
#X obj 138 150 select 0;
#N canvas 251 122 340 314 portamento 0;
#X obj 92 158 line~;
#X obj 92 229 outlet~;
#X obj 92 47 inlet;
#X obj 92 137 pack f 50;
#X text 128 101 A 50ms ramp for pitch changes;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X restore 35 264 pd portamento;
#N canvas 512 109 450 300 vibrato 0;
#X obj 92 149 +~;
#X obj 92 229 outlet~;
#X obj 92 79 inlet~;
#X obj 92 170 mtof~;
#X obj 171 144 osc~ 6;
#X obj 171 165 *~ 0.25;
#X connect 0 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 5 0;
#X connect 5 0 0 1;
#X restore 35 298 pd vibrato;
#X obj 108 381 adsr 1 10 200 50 500;
#X obj 135 45 fake-midi-keyboard;
#X obj 35 459 output~;
#X obj 135 25 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 272 132 This is based on 3.audio.examples/J08.classicsynth.pd
;
#X obj 35 45 notein;
#X obj 258 196 hsl 128 15 500 12500 0 0 empty empty empty -2 -8 0 10
-262144 -1 -1 0 1;
#X floatatom 265 216 10 0 0 0 - - -, f 10;
#X obj 212 247 adsr 4000 10 200 10 500;
#X text 275 273 This ADSR is used to automate the band-pass filter's
center frequency. You can change the range of the filter sweep using
the slider above;
#X text 144 410 << Here \, the output of the amplitude ADSR is squared
so that it has a curved shape rather than a linear one. You can try
removing this to see if you hear a difference.;
#X obj 344 480 loadbang;
#X text 98 327 << This subpatch generates two sawtooth waves that slide
against each other \, creating a spectrally rich source to filter.
;
#X msg 344 501 \; pd dsp 1 \; osc-params 0.5 -0.5 0.5 0.5 1 0.5 \;
;
#X connect 0 0 3 0;
#X connect 1 0 2 1;
#X connect 2 0 13 0;
#X connect 2 0 13 1;
#X connect 3 0 2 0;
#X connect 4 0 5 0;
#X connect 4 1 9 0;
#X connect 5 0 11 0;
#X connect 5 0 19 0;
#X connect 6 0 11 0;
#X connect 6 0 19 0;
#X connect 7 0 4 0;
#X connect 8 0 6 0;
#X connect 9 0 10 0;
#X connect 10 0 0 0;
#X connect 11 0 1 0;
#X connect 11 0 1 1;
#X connect 12 0 7 0;
#X connect 12 1 8 0;
#X connect 12 1 7 1;
#X connect 14 0 12 0;
#X connect 16 0 7 0;
#X connect 16 1 7 1;
#X connect 16 1 8 0;
#X connect 17 0 18 0;
#X connect 17 0 19 1;
#X connect 19 0 3 1;
#X connect 22 0 24 0;
